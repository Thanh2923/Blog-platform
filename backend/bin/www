#!/usr/bin/env node

require('dotenv').config();
const app = require('../app');
const connectDB = require('../config/db');

// L·∫•y PORT t·ª´ m√¥i tr∆∞·ªùng
const PORT = normalizePort(process.env.PORT || '5000');
app.set('port', PORT);

// K·∫øt n·ªëi DB v√† ch·∫°y server
connectDB().then(() => {
  const server = app.listen(PORT, () => {
    console.log(`üöÄ Server is running on port ${PORT}`);
  });

  server.on('error', onError);
  server.on('listening', onListening);
});

// Chu·∫©n h√≥a c·ªïng
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

// X·ª≠ l√Ω l·ªói
function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = typeof PORT === 'string' ? `Pipe ${PORT}` : `Port ${PORT}`;
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
    default:
      throw error;
  }
}

// Khi server l·∫Øng nghe th√†nh c√¥ng
function onListening() {
  console.log(`‚úÖ Listening on port ${PORT}`);
}
